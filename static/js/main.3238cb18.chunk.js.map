{"version":3,"sources":["ui/timer/index.js","ui/nav/index.js","App.js","index.js"],"names":["now","Date","Timer","offset","React","formatDate","date","setDate","timer","setInterval","clearInterval","withZero","num","offsetDifference","getTimezoneOffset","d","getTime","hours","getHours","minutes","getMinutes","Navigation","items","activeEvent","setActiveEvent","pointerStyles","event","setStyles","calculateStyles","width","target","getBoundingClientRect","left","offsetLeft","window","addEventListener","removeEventListener","usePointerStyles","className","map","key","label","section","timezoneOffset","isSelected","dataset","onClick","data-section","data-selected","style","App","cities","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"otBAEMA,G,MAAM,IAAIC,MAEHC,EAAQ,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACXC,WAAeC,EAAWL,EAAKG,IADpB,mBAC5BG,EAD4B,KACtBC,EADsB,KAQnC,OALAH,aAAgB,WACd,IAAMI,EAAQC,aAAY,kBAAMF,EAAQF,EAAWL,EAAKG,MAAU,KAClE,OAAO,kBAAMO,cAAcF,OAGtBF,GAGT,SAASD,EAAWC,EAAMH,GACxB,SAASQ,EAASC,GAChB,OAAOA,EAAM,EAAIA,EAAV,WAAoBA,GAG7B,IAAMC,EAAmBV,EAASG,EAAKQ,oBACjCC,EAAI,IAAId,KAAKK,EAAKU,UAA+B,GAAnBH,EAAwB,KACtDI,EAAQN,EAASI,EAAEG,YACnBC,EAAUR,EAASI,EAAEK,cAE3B,MAAM,GAAN,OAAUH,EAAV,YAAmBE,G,WCpBRE,EAAa,SAAC,GAAoB,IAAD,IAAjBC,aAAiB,MAAT,GAAS,IACNlB,WAAe,MADT,mBACrCmB,EADqC,KACxBC,EADwB,KAEtCC,EA2BR,SAA0BC,GAAQ,IAAD,EACItB,WAAe,MADnB,mBACxBqB,EADwB,KACTE,EADS,KAmB/B,OAhBAvB,mBAAsB,WACpB,SAASwB,IACPD,EAAU,CACRE,OAAY,OAALH,QAAK,IAALA,OAAA,EAAAA,EAAOI,OAAOC,wBAAwBF,QAAS,EACtDG,MAAW,OAALN,QAAK,IAALA,OAAA,EAAAA,EAAOI,OAAOG,aAAc,IAOtC,OAHAL,IAEAM,OAAOC,iBAAiB,SAAUP,GAC3B,WACLM,OAAOE,oBAAoB,SAAUR,MAEtC,CAACF,IAEGD,EA9CeY,CAAiBd,GAEvC,OACE,sBAAKe,UAAU,MAAf,UACGhB,EAAMiB,KAAI,WAAqCC,GAAS,IAAD,EAA1CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,eACtBC,EAAaF,KAAO,OAAKnB,QAAL,IAAKA,GAAL,UAAKA,EAAaO,OAAOe,eAAzB,aAAK,EAA6BH,SAE5D,OACE,sBAEEJ,UAAU,WACVQ,QAAStB,EACTuB,eAAcL,EACdM,gBAAeJ,EALjB,UAOGH,EACD,qBAAKH,UAAU,YAAf,SACGM,GAAc,cAAC,EAAD,CAAOzC,OAAQwC,QAR3BH,MAaX,qBAAKF,UAAU,cAAcW,MAAOxB,QCxB1C,IAQeyB,EARH,WACV,OACE,qBAAKZ,UAAU,MAAf,SACE,cAAC,EAAD,CAAYhB,MAAO6B,SCJzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3238cb18.chunk.js","sourcesContent":["import * as React from 'react';\n\nconst now = new Date();\n\nexport const Timer = ({ offset }) => {\n  const [date, setDate] = React.useState(formatDate(now, offset));\n\n  React.useEffect(() => {\n    const timer = setInterval(() => setDate(formatDate(now, offset)), 1000);\n    return () => clearInterval(timer);\n  });\n\n  return date;\n};\n\nfunction formatDate(date, offset) {\n  function withZero(num) {\n    return num > 9 ? num : `0${num}`;\n  }\n\n  const offsetDifference = offset + date.getTimezoneOffset();\n  const d = new Date(date.getTime() + offsetDifference * 60 * 1000);\n  const hours = withZero(d.getHours());\n  const minutes = withZero(d.getMinutes());\n\n  return `${hours}:${minutes}`;\n}\n","import * as React from 'react';\nimport './styles.scss';\n\nimport { Timer } from '../timer';\n\nexport const Navigation = ({ items = [] }) => {\n  const [activeEvent, setActiveEvent] = React.useState(null);\n  const pointerStyles = usePointerStyles(activeEvent);\n\n  return (\n    <div className=\"nav\">\n      {items.map(({ label, section, timezoneOffset }, key) => {\n        const isSelected = section === activeEvent?.target.dataset?.section;\n\n        return (\n          <div\n            key={key}\n            className=\"nav-item\"\n            onClick={setActiveEvent}\n            data-section={section}\n            data-selected={isSelected}\n          >\n            {label}\n            <div className=\"nav-timer\">\n              {isSelected && <Timer offset={timezoneOffset} />}\n            </div>\n          </div>\n        );\n      })}\n      <div className=\"nav-pointer\" style={pointerStyles} />\n    </div>\n  );\n};\n\nfunction usePointerStyles(event) {\n  const [pointerStyles, setStyles] = React.useState(null);\n\n  React.useLayoutEffect(() => {\n    function calculateStyles() {\n      setStyles({\n        width: event?.target.getBoundingClientRect().width || 0,\n        left: event?.target.offsetLeft || 0,\n      });\n    }\n\n    calculateStyles();\n\n    window.addEventListener('resize', calculateStyles);\n    return () => {\n      window.removeEventListener('resize', calculateStyles);\n    };\n  }, [event]);\n\n  return pointerStyles;\n}\n","import './App.scss';\n\nimport { cities } from './mocks/navigation.json';\nimport { Navigation } from './ui/nav';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Navigation items={cities} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}